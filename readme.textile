h1. yerform

is a PHP class to create forms, handle validation and sending.

Building forms can be horrible, they are allways different and webdesigners are talented in making it nearly impossible. This piece of code tries to put the beast in a cage.

This documentation is incomplete and corrupting changes still may ahead!

h2. Roadmap

* captcha
* complete documentation
* definable dateformat for date validation
* config swift (PHP Mail, Sendmail, Smtp & SSL)
* [progressive] basic css styling, focusing on layoutoptions

* [done] prepared for using with ajax
* [done] output type return and echo
* [done] field radio
* [done] validation for email
* [done] initial release

Just ask me for your needs at mail@johannheyne.de or create a new issue.

h2. Setup

h3. The yerForm Class

Autoload the "core/yerform.php". The class will only be loaded if it is needed.
<pre><code>function __autoload( $class_name ) {
    if ( $class_name == 'yerForm' ) require_once( 'yerform/core/yerform.php');
}
</code></pre>

h3. The yerForm Theme

Include the styles from a theme if the yerForm class exists.
<pre><code>if ( class_exists('yerForm') ) {
    echo '<link rel="stylesheet" type="text/css" href="yerform/themes/default/yerform-styles.css" />';
}
</code></pre>

h3. Create A New Form

<pre><code>$form = new yerForm();
$form->form_id = 'my_contact_form';
</code></pre>

h3. Configuration

<pre><code>$form->config( array(
    'form_class' => false,
    'action' => false,
    'sent_page' => false,
    'honeypot' => 'Honeypot',
    'mail_subject' => 'Contact',
    'field_sender_mail' => 'email',
    'fields_sender_name' => array( 'surename', 'familyname' ),
    'recipient_mail' => 'my email',
    'recipient_name' => 'my name',
    'mail_text' => "
        Contactform
        Name: {surename} {familyname}
        E-Mail: {email}
        Message:
        {message}
    ",
    'message_error_main' => array(
        'typ'=>'error',
        'text'=>'Could not send form! Check the following fields: {fields}'
    ),
    'message_mail_sending' => array(
        'typ'=>'info',
        'text'=>'Is sending!'
    ),
    'message_mail_sent' => array(
        'typ'=>'info',
        'text'=>'Sent!'
    ),
    'messages_validation' => array(
        'required' => array( 'text'=>'required' ),
        'email' => array( 'text'=>'invalid' )
    )
));
</code></pre>

*sent_page*
<em>(string)</em> URL to redirect, after a form was sent.
The <em>default</em> is false.

h2. Global Messages

This is for all global messages like validation and send status.

<pre><code>$form->set( 'messages' );
</code></pre>

h2. Building The Form Structure

The basic structure are fieldsets. Inside a fieldset belongs a list. Inside a list belongs fields and fieldgroups. A field represents a single list-item. But you can use groups for nesting the list.

h3. Fieldset And List

<pre><code>$form->set( 'fieldset_begin', array(
    'legend'=>'Contactdata',
    'class'=>false,
    'require_info'=> array(
        'text' => '*required'
    )
));
    $form->set( 'list_begin', array(
        'list-layout' => 'block'
    ));
        
        /* fields and field groups */
        
    $form->set( 'list_end' );
$form->set( 'fieldset_end' );
</code></pre>

*list-layout*
<em>(string) block, inline, table</em>

h3. Fieldgroup

<pre><code>$form->set( 'group_begin', array(
    'label' => false,
    'group-layout' => 'block',
    'list-layout' => 'block',
    'list-gap' => false
));

    /* some fields */
    
$form->set( 'group_end');
</code></pre>

*label*
<em>(string)</em> Labelname of the group.

*group-layout*
<em>(string) block, inline</em>

*list-layout*
<em>(string) block, inline, table</em>

*list-gap*
<em>(bolean)</em> Enables gap between fields or groups if list-layout is block or inline.


h2. Fields

h3. Text

<pre><code>$form->set( 'field_text', array(
    'name' => 'no name',
    'array' => false,
    'label' => 'no name',
    'placeholder' => false,
    'sufix' => '',
    'value' => '',
    'size' => '40',
    'maxlength' => '200',
    'item-layout' => 'inline',
    'padding' => array( 0, 0 ),
    'class' => false
));
</code></pre>

*name*
<em>(string)</em> The name and Id of the field.

*array*
<em>(integer)</em> For fields with same name like a checkboxset.

*label*
<em>(string)</em> The label of the field.

*placeholder*
<em>(string)</em> Defines a placeholder text for the field.

*sufix*
<em>(string)</em> Displaying after the Field.

*value*
<em>(string)</em> Defines a value prefilled.

*size*
<em>(integer)</em> Defines the size of the textfield. 
The <em>default</em> is $form->field_text_size = 40.

*maxlength*
<em>(integer)</em> Defines the maximal lenght of the textfields content. 
The <em>default</em> is $form->field_text_maxlength = 200.

*item-layout*
<em>(string) inline, block</em> Defines the alignment of label and field.

*padding*
<em>(array( integer-left, integer-right ))</em> Defines the left and right padding of the field list-item. 
This is usefull for giving horizontal orientated fields some spacing.

*class*
<em>(string)</em> Defines a class on the field list-item.

h3. Textarea

<pre><code>$form->set( 'field_textarea', array(
    'name' => 'noname',
    'array' => false,
    'label' => 'no name',
    'value' => '',
    'cols' => $this->field_textarea_cols,
    'rows' => $this->field_textarea_rows,
    'padding' => array(0,0),
    'item-layout' => 'inline'
));
</code></pre>

h3. Checkbox

<pre><code>$form->set( 'field_checkbox', array(
    'name' => 'noname',
    'array' => false,
    'label' => 'no name',
    'labeltype' => 'field-after',
    'data' => 'checked'.
    'item-layout' => 'inline'
));
</code></pre>

h3. Radio

<pre><code>$form->set( 'field_radio', array(
    'name' => 'noname',
    'array' => false,
    'label' => 'no name',
    'labeltype' => 'field-after',
    'data' => 'checked',
    'item-layout' => 'inline'
));
</code></pre>

h3. Select

<pre><code>$form->set( 'field_select', array(
    'name' => 'noname',
    'array' => false,
    'label' => 'no name',
    'data' => array(
        '' => 'wähle…'
    ),
    'item-layout' => 'inline'
));
</code></pre>

h3. Hidden

<pre><code>$form->set( 'field_hidden', array(
    'name' => 'noname',
    'value' => ''
));
</code></pre>

h3. HTML

<pre><code>$form->set( 'field_html', array(
    'padding' => array(0,0),
    'content' => ''
));
</code></pre>

*content*
<em>(string)</em> HTML-Code to display.

h2. Validation

Just a sample, where to place the validation array:

<pre><code>$form->set( 'field_text', array(
    'name' => 'surename',
    'label' => 'Surename',
    'layout' => 'table',
    'validation' => array(
        0 => array(
            'type' => 'required',
            'cond' => true,
            'message' => $messages['required']
        )
    )
));</code></pre>

Just put the messages for each validation error type in a variable as an array like this:
$messages['required'];

h3. Required

<pre><code>array(
    'type' => 'required',
    'cond' => true,
    'message' => $messages['required']
)
</code></pre>

h3. E-Mail

<pre><code>array(
    'type' => 'email',
    'message' => $messages['email']
)
</code></pre>

h3. Date

<pre><code>array(
    'type' => 'date',
    'min' => '+1 day',
    'max' => '+2 year',
    'dependency' => array(
        'field' => 'fieldname',
        'value' => '+1 day',
        'operator' => '>=',
        'message' => $messages['date-dependency']
    ),
    'message-checkdate' => $messages['checkdate'],
    'message-dateformat' => $messages['dateformat'],
    'message-min-max' => $messages['date-min-max']
)
</code></pre>

*min max*
<em>(You can use the same date definitions as for strtotime())</em> Defines the minimum and maximum of the date.
For example:
'now'
'05-07-2012'
'05-07-2012 -1 day'
'10 September 2000'
'+1 day'
'+1 week'
'-1 year +2 days'
'next Thursday'
'last Monday'

*dependency*
Depending the value with the value of another date-field.

*checkdate*
If a date not exists for example 32.13.2012

*message-dateformat*
If the date does not fit the format "dd.mm.yy"
The date format will be changeable in futur.

*message-min-max*
If the date does not fit the given range of min and/or max.

h2. Output The Form

<pre><code>$form->run( array(
    'output' => 'return'
));
</code></pre>

*output*
<em>('echo' | 'return')</em> Defines the type of output.

h2. Submit And Reset Button

<pre><code>$form->set( 'form_buttons', array(
    'submit' => true,
    'submit_label' => 'Submit',
    'submit_class' => false,
    'submit_btn_class' => false,
    'reset' => true,
    'reset_label' => 'Reset',
    'reset_class' => false,
    'reset_btn_class' => false
));
</code></pre>

*submit*
<em>(false | true)</em> Enables the submit-button.

*submit_label*
<em>(string)</em> Defines the buttontext.

*submit_class*
<em>(false | string)</em> Defines the class of the submit-button container.

*submit_btn_class*
<em>(false | string)</em> Defines the class of the submit-button itself.

*reset*
<em>(false | true)</em> Enables the reset-button.

*reset_label*
<em>(string)</em> Defines the buttontext.

*reset_class*
<em>(false | string)</em> Defines the class of the reset-button container.

*reset_btn_class*
<em>(false | string)</em> Defines the class of the reset-button itself.

h2. Ajax

yerform is using a html redirect after sending the form to prevent resending the form by pagereload. This wont work, if the form is part of an ajax request. You can prevent this by adding the parameter ajax=y to the action url.

<pre><code>jQuery('body').find('.formwrap form').submit( function(event) {
    event.preventDefault();

    var form = jQuery(this),
    url = form.attr('action');

    jQuery.post( url + '?ajax=y', form.serialize(), function( data ) {

        jQuery('.formwrap').html( data );

    });
});
</code></pre>

h2. HTML

<pre><code><form id="my_contact_form" class="yerform" action="" method="post" enctype="multipart/form-data" name="yerform" target="_self">
    
    <input name="yerform" type="hidden" value="yerform">
    
    <div class="yerform-messages">
        <div class="yerform-messages-error">Formular konnte nicht gesendet werden! Bitte prüfe folgende Felder: E-Mail</div>
    </div>
    
    <div>
        <fieldset class="yerform-fieldset">
            <legend class="yerform-fieldset-legend ">Kontaktdaten</legend>
            
            <ul class="yerform-list  yerform-depht-1">
                
                <li style="" class="yerform-list-item yerform-item-type-text">
                    <div class="yerform-list-item-inner">
                        <div class="yerform-label-wrap">
                            <label for="text">Text</label>
                        </div>
                        <div class="yerform-fields-wrap">
                            <div class="yerform-field-wrap">
                                <input type="text" id="text" name="text" value="" maxlength="200" placeholder="Text">
                            </div>
                        </div>
                    </div>
                </li>
                
                <li class="yerform-list-item yerform-list-item-error yerform-item-type-text">
                    <div class="yerform-list-item-inner">
                        <div class="yerform-label-wrap">
                            <label for="email">E-Mail<span class="required">*</span></label>
                        </div>
                        <div class="yerform-fields-wrap">
                            <div class="yerform-field-wrap">
                                <input type="text" id="email" name="email" value="" maxlength="200" placeholder="E-Mail">
                            </div>
                        
                            <!-- this is an validation message for the field -->
                            <div class="yerform-field-message">
                                <span class="yerform-field-message-error">benötigt</span>
                            </div>
                        
                        </div>
                    </div>
                </li>
                
                <li class="yerform-list-item-group yerform-group-inline">
                    
                    <!-- this is a group for may displaying the fields inline -->
                    <div class="yerform-list-item-group-inner">
                    
                        <div class="yerform-group-label">
                            <label>Inline Felder</label>
                        </div>
                    
                        <div class="yerform-fields-wrap">
                        
                            <ul class="yerform-list yerform-list-inline yerform-depht-2">
                            
                                <li class="yerform-list-item yerform-item-type-text yerform-list-item-sized">
                                    <div class="yerform-list-item-inner">
                                        <div class="yerform-label-wrap">
                                            <label for="plz">PLZ</label>
                                        </div>
                                        <div class="yerform-fields-wrap">
                                            <div class="yerform-field-wrap">
                                                <input type="text" id="plz" name="plz" value="" size="5" maxlength="5" placeholder="PLZ">
                                            </div>
                                        </div>
                                    </div>
                                </li>
                            
                                <li class="yerform-list-item yerform-item-type-text">
                                    <div class="yerform-list-item-inner">
                                        <div class="yerform-label-wrap">
                                            <label for="ort">Ort</label>
                                        </div>
                                        <div class="yerform-fields-wrap">
                                            <div class="yerform-field-wrap">
                                                <input class="form-field field-margin-right" type="text" id="ort" name="ort" value="" maxlength="200" placeholder="Ort">
                                            </div>
                                        </div>
                                    </div>
                                </li>
                            
                            </ul>
                        
                        </div>
                    
                    </div>
                    
                </li>
                
            </ul>
            
        </fieldset>
    </div>
    
</form>
</code></pre>

